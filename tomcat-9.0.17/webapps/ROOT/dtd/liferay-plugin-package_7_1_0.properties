##
## General
##

    #
    # Set the display name of the plugin.
    #
    name=
    #name=Nosester App

    #
    # Specify a module group identifier for the plugin.
    #
    module-group-id=
    #module-group-id=liferay
    #module-group-id=nosester

    #
    # Specify the starting version number of the plugin. Every time a user
    # modifies the plugin, the version number increments by 1.
    #
    module-incremental-version=
    #module-incremental-version=1

    #
    # Specify a list of comma delimited tags that categorize the plugin.
    #
    tags=
    #tags=collaboration, communication

    #
    # Provide a short description of the plugin for users to read.
    #
    # Note: the text of this element can contain simple HTML formatting.
    #
    short-description=

    #
    # Provide a long description of the plugin for users to read.
    #
    # Note: the text value of this property can contain simple HTML formatting.
    #
    #long-description=

    #
    # Describe the changes made in the latest release. Try to offer all
    # information users might need in deciding whether to update from a previous
    # version of the plugin.
    #
    # Note: the text value of this property can contain simple HTML formatting.
    #
    change-log=

    #
    # Specify the URL of the plugin's home page.
    #
    page-url=
    #page-url=http://www.liferay.com
    #page-url=http://www.nosester.com

    #
    # Specify the URL of the plugin's download page.
    #
    #download-url=
    #download-url=http://www.nosester.com/downloads

    #
    # Specify the plugin's author(s).
    #
    author=
    #author=Liferay, Inc.
    #author=Nosester
    #author=Jose Nose and Peter Proboscis

    #
    # Specify a list of comma delimited licenses under which the plugin is
    # provided.
    #
    licenses=
    #licenses=AGPL
    #licenses=CCA
    #licenses=GPL
    #licenses=LGPL

    #
    # Specify a list of comma delimited Liferay versions that are supported by
    # the plugin.
    #
    liferay-versions=
    #liferay-versions=6.1.10, 6.1.20
    #liferay-versions=7.1.0

    #
    # Specify all JARs the plugin requires. If any of these JAR files are
    # already present in Liferay Portal's "lib" folder, avoid packaging them
    # again by adding them here.
    #
    # During deployment, these JARs are copied from Liferay Portal's "lib"
    # folder to the deployed plugin's "lib" folder. The JAR files are also added
    # to the plugin's API class path container.
    #
    # This property is deprecated as of Liferay CE Portal 7.0 GA4 and Liferay
    # Digital Enterprise 7.0 Fix Pack 13; it's only provided for backwards
    # compatibility.
    #
    #portal-dependency-jars=
    #portal-dependency-jars=\
    #    jstl-api.jar,\
    #    jstl-impl.jar,\
    #    slf4j-api.jar

    #
    # Specify all TLDs the plugin requires. If any of these TLD files are
    # already present in Liferay Portal's "tld" folder, avoid packaging them
    # again by adding them here.
    #
    # During deployment, these TLDs are copied from Liferay Portal's "tld"
    # folder to the deployed plugin's "tld" folder and setup in web.xml to
    # facilitate design time DTD validation.
    #
    #portal-dependency-tlds=
    #portal-dependency-tlds=c.tld

    #
    # Specify other plugins that depend on deployment of this plugin. Some
    # plugins require this in order to rely on services and features provided by
    # other plugins.
    #
    #required-deployment-contexts=
    #required-deployment-contexts=\
    #    chat-portlet,\
    #    flash-portlet,\
    #    sample-service-builder-portlet

##
## Resources Importer
##

    #
    # Set this to "true" to enable the Resources Importer Developer Mode for a
    # theme plugin. The developer mode requires the "resources-importer-web"
    # plugin, which resides in the Resources Importer CE/EE app. The Resources
    # Importer CE/EE app can be downloaded from Liferay Marketplace.
    #
    # The "resources-importer-web" plugin allows front-end developers to package
    # layouts, portlet configurations, site pages, and web content together in a
    # theme without saving it as a compiled LAR file. This allows for greater
    # flexibility in the plugin's usage between Liferay Portal versions. When a
    # theme has the developer mode turned on, layouts and resources of the site
    # template are deleted and recreated during new deployment. This allows for
    # modifications to show without manual deletion of site templates.
    #
    # For marketplace themes, the "resources-importer-web" must be included in
    # the "required-deployment-contexts" list. Also, the
    # "docroot/WEB-INF/src/resources-importer" folder must exist within the
    # theme structure. Failing to comply with these settings will cause an error
    # preventing submission of the theme.
    #
    #resources-importer-developer-mode-enabled=
    #resources-importer-developer-mode-enabled=true

    #
    # Specify a directory on the portal host from which to import resources with
    # this theme.
    #
    # By default, the Resources Importer looks in the theme's
    # /WEB-INF/classes/resources-importer/ for resources to import.
    #
    #resources-importer-external-dir=
    #resources-importer-external-dir=\
    #    ${context.path}/WEB-INF/classes/test/resource/

    #
    # Specify the name of the class into which the theme's resources are to be
    # imported. This property should only be set if resources are to be imported
    # with the theme.
    #
    # To import resources directly into a specific site, specify target class
    # name com.liferay.portal.kernel.model.Group and the site's name for the
    # "resources-importer-target-value" property.
    #
    # For example, Liferay's Welcome theme specifies class name
    # com.liferay.portal.kernel.model.Group and Guest for the
    # "resources-importer-target-value" property.
    #
    # By default, resources are imported into a
    # com.liferay.portal.kernel.model.LayoutSetPrototype (site template).
    #
    #resources-importer-target-class-name=
    #resources-importer-target-class-name=com.liferay.portal.kernel.model.Group

    #
    # Specify the name of the target class instance into which the theme's
    # resources are to be imported. A new instance of the target class is
    # created if an instance with the specified name does not exist.
    #
    # For example, Liferay's Welcome theme specifies Guest as the target value,
    # to import the theme's resources to the Guest group.
    #
    # By default, if no target value is specified, the theme's resources are
    # imported into an instance of the target class named after the theme.
    #
    #resources-importer-target-value=
    #resources-importer-target-value=Guest
    #resources-importer-target-value=Some Site